В общем, если никак не получается, воспользуйтесь подсказкой:

1. копируем прошлый код (хоть с классом, хоть без)

2. parametrize меняем на свои значения. (шаблон прошлого теста намекает как его надо скорректировать)
@pytest.mark.parametrize('number', [str(i) for i in range(236895, 236906)])

3. корректируем url согласно заданию (шаблон прошлого теста намекает как его надо скорректировать)

4. добавляем ожидание (на прошлых уроках проходили, подойдет и явное и не явное ожидание)

5. производим поиск поля для ввода

6. вводим туда указанную в задании математическую формулу (преобразовать ее в нужный формат не забываем)

7. ищем и нажимаем на кнопку

8. ищем ответ в появившемся блоке и записываем его в переменную

9. эту переменную сравниваем с "Correct!" (если сравнение будет не верным, мы увидем ошибку, а точнее текст который не совпал)

10. запускаем Тест, в тех местах где будет ошибка, копируем отрывки предложения, соединяем их в месте и вводим в ответ. (да можно сделать соединение текста всех ошибок и вывести одним текстом, но надо ли оно?)

p/s

надеюсь не запинаете меня за подсказку, я сам долго мучился пока не понял как что делать и многое нашел в ответах но в разных местах.

Очень крутое задание! Сидел 3 часа) Хочу тоже оставить структуру выполнения:

1. Копируем фикстуру браузера из пред. шага

2.Создаем фикстуру параметриз('переменная', ["урлы"])
@pytest.mark.parametrize('links', ["https://stepik.org/lesson/236895/step/1",
                                   "https://stepik.org/lesson/236896/step/1",
                                   "https://stepik.org/lesson/236897/step/1",
                                   "https://stepik.org/lesson/236898/step/1",
                                   "https://stepik.org/lesson/236899/step/1",
                                   "https://stepik.org/lesson/236903/step/1",
                                   "https://stepik.org/lesson/236904/step/1",
                                   "https://stepik.org/lesson/236905/step/1"])
links - переменная с урлами
["236895","236896","236897","236898","236899","236903","236904","236905"]
f"https://stepik.org/lesson/{link}/step/1"

3. Создаем класс, название с Test..

4. Создаем функцию, название с test...(селф, браузер, переменная с шага 2)

5. Создаем переменную = str(math.log(int(time.time())))

6. link = переменная 2 шага; браузер гет(link)

7. Добавляем ожидание

8. Находим поле для ввода ответа и send_keys туда переменную с 5 шага (можно и сразу ввести, не создавая переменную)

9. Находим кнопку Отправить через  WebDriverWait...   EC.element_to_be_clickable (так как она не сразу доступна) и нажимаем на нее ( либо после шага 8 - добавьте ожидание)

10. Создаем переменную селектора правильности ответа: просто откройте любой урл из списка, введите что угодно в поле и нажмите копку (неважно что неправильный ответ - селектор тот же), после ищите его в коде

11. Ассерт 'правильный ответ' in переменная селектора правильности. text

12. В конце иф нейм = мейн:

                             пайтест.мейн()

Тезисно:

1) Копируем фикстуру-открывашку с прошлого шага

2) Добавляем в нее ожидание 

3) Пишем фикстуру, куда добавляем урл и урлы:) )

4) Дале класс который начинается с Test

5) В нем функция, тоже название тест

6) В функцию передаем (селф, фикстуру открывашки браузера, урл:)  )

7) Тут формула с ансвером (неожиданно) 

8) Ищем уникальный селектор для поля ввода ответа и записываем ответ

9) Ищем уникальный селектор для кнопки и жмем

10) Присваиваем переменную селектору индикатора правильности (или неправильности) введеного ответа. ( просто открываете первую ссылку в поле ответа пишете что угодно. Появляется сообщение, что ответ неверный и потом ищите его в коде)

11) пишите ассерт с переменной .текст:) 

иф нэйм == мэйн

пайтест .мэйн

На последнем этапе теста можно использовать след. код для вывода кусочков ответа в файл. В итоге получаем готовый ответ в файле без нужды что-либо собирать ручками из логов.

if clue != 'Correct!':
    with open('result.txt', 'a') as file:
        file.write(clue)
где переменная clue - то, что вы получаете вместо Correct! на разных страницах.